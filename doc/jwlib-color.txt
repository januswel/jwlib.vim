*jwlib-color.txt*	Autoload script about color
                                                Last change: 2010 Jan 03.

SYNOPSIS						*jwlib-color-synopsis*
>
	" handling RGB
	" to List
	" all of the "indigo" is [75, 0, 130]
	let indigo = jwlib#color#rgb#Normalize2List('#4b0082')
	let indigo = jwlib#color#rgb#Normalize2List('4b0082')
	let indigo = jwlib#color#rgb#Normalize2List('0x4b', 0, 0x82)
	let indigo = jwlib#color#rgb#Normalize2List(75, '0', '130')
	let indigo = jwlib#color#rgb#Normalize2List([0x4b, 0, '0x82'])
	let indigo = jwlib#color#rgb#Normalize2List({
	        \    'ReD':'75',
	        \    'g':0,
	        \    'blUE':130
	        \ })

	" to String
	echo jwlib#color#rgb#List2Str(indigo)
	echo jwlib#color#rgb#List2Str(indigo, 'X')
	echo jwlib#color#rgb#List2Str(indigo, '#3')


	" converting between RGB and xterm color number
	" xterm 256 colors to RGB
	echo jwlib#color#xterm256#Nr2RGB(100)

	" RGB to xterm 256 colors
	execute 'highlight' 'Comment'
			\ 'ctermfg=' .  jwlib#color#xterm256#RGB2Nr('#ffa500')


DESCRIPTION					*jwlib-color-description*

Autoload scripts about buffer.  Here there are descriptions its name start
with "color", specifically following files.

autoload/jwlib/color/rgb.vim
	Contains functions to handling RGB value.
autoload/jwlib/color/xterm256.vim
	Contains functions to convert value between RGB and xterm color
	number.

DEPENDENCIES					*jwlib-color-dependencies*

autoload/jwlib/color/xterm256.vim requires autoload/jwlib/color/rgb.vim.  I
recommend to get both scripts.

PROVIDES						*jwlib-color-provides*

Functions:
							*jwlib-color-rgb*
jwlib#color#rgb#Normalize2List({somethinglikeRGB})
	Return a |List| that is the form of [{red}, {green}, {blue}].
	{somethinglikeRGB} is a value[s] listed below.

	type	    detail ~
	Number	    An integer.  Two more values - Number or String looking
		    like an integer - are required.
	String	    The form of "#rrggbb", "rrggbb" or "#rgb".  The one that
		    is looking like an integer can be specified.  See above
		    descriptions about Number.
	List	    A List has 3 items that are Number or String looking like
		    an integer.
	Dictionary  A Dictionary has following keys (case-insensitive) and
		    values are Number or String looking like an integer.

		key		meaning ~
		"r" or "red"	a value of red
		"g" or "green"	a value of green
		"b" or "blue"	a value of blue

	When can't convert to a List, an exception specify a source of error
	is thrown.

	See |jwlib-color-synopsis| for example.

jwlib#color#rgb#List2Str({rgb}[, {opt}])
	Return a |String| formatted from {rgb} with {opt}.
	{rgb} must be a List has 3 Numbers in the form of [{red}, {green},
	{blue}] - the form of returned value by
	jwlib#color#rgb#Normalize2List().  {opt} is option for format
	specifier.  All of options are shown below:

	option	meaning ~
	"#"	The cap "#" is added (default).
	"x"	Use non-capital characters (default).  When specified with
		"X", last one is used.
	"X"	Use capital characters.  When specified with "x", last one is
		used.
	"6"	Format to six-digit - the form of "rrggbb" (default).
	"3"	Format to three-digit - the form of "rgb".

	"default" indicates the format when no options are passed.  Thus 2nd
	argument doesn't exist, this function return in the form of "#rrggbb".

	When can't format to a String, an exception specify a source of error
	is thrown.

	See |jwlib-color-synopsis| for example.

							*jwlib-color-xterm256*
jwlib#color#xterm256#Nr2RGB({nr})
	Return a |String| that is a RGB in the form of non-capital "#rrggbb",
	to corresponds to {nr}.
	{nr} is xterm color number and must be an integer from 0 to 255.
	Otherwise throw an exception.

jwlib#color#xterm256#RGB2Nr({somethinglikeRGB})
	Return a |Number| that is a xterm color number, to corresponds to
	{somethinglikeRGB} or to be the number of nearest color from it.
	{somethinglikeRGB} is the same as a one of
	jwlib#color#rgb#Normalize2List(), see |jwlib-color-rgb|.


==============================================================================

Author
	janus_wel <janus.wel.3@gmail.com>
Copyright
	(c) 2010 by janus_wel
License
	This material may be distributed only subject to the terms and
	conditions set forth in the Open Publication License, v1.0 or later
	(the latest version is presently available at
	http://www.opencontent.org/openpub/).

vim:tw=78:ts=8:noet:ft=help:norl:
